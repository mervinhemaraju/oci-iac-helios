#cloud-config
# Cloud-init configuration for GitHub Actions Runner

hostname: ${hostname}
package_update: true
package_upgrade: true

users:
  - name: opc
    groups: sudo
    shell: /bin/bash
    homedir: /home/opc
    sudo: "ALL=(ALL) NOPASSWD:ALL"
    ssh_authorized_keys:
      - "${authorized_ssh_key}"

  - name: th3pl4gu3
    groups: sudo,docker
    shell: /bin/bash
    homedir: /home/th3pl4gu3
    sudo: "ALL=(ALL) NOPASSWD:ALL"
    ssh_authorized_keys:
      - "${authorized_ssh_key}"

packages:
  - curl
  - wget
  - jq
  - openssl-devel
  - git
  - nginx
  - tar
  - python3-pip
  - oci-utils
  - python39-oci-cli
  - postgresql
  - mariadb

write_files:
  # Set up environment variables
  - path: /etc/environment
    content: |
      GITHUB_PAT=${github_pat}
      GITHUB_ORG=plagueworks-org
      GITHUB_PERSONAL=mervinhemaraju
    append: true
    permissions: "0644"

  # Setup Python aliases
  - path: /etc/profile.d/python-aliases.sh
    permissions: "0644"
    content: |
      #!/bin/bash
      # System-wide Python aliases
      alias python=python3
      alias pip=pip3
      export PATH=$PATH:/usr/local/bin

  # Create a custom nginx configuration
  - path: /tmp/nginx.conf.custom
    permissions: "0644"
    encoding: b64
    content: ${nginx_config_b64}

  # Add database server mapping to hosts file
  - path: /etc/hosts
    append: true
    content: |
      # Database server
      ${gaia_db_server}    gaia-db.local gaia-db

  # MariaDB client config for th3pl4gu3 user
  - path: /home/th3pl4gu3/.my.cnf
    owner: th3pl4gu3:th3pl4gu3
    permissions: "0600"
    content: |
      [client]
      host=${gaia_db_server}
      user=th3pl4gu3
      password=${mariadb_root_password}

      [mysql]
      host=${gaia_db_server}
      user=th3pl4gu3
      password=${mariadb_root_password}

  # PostgreSQL password file for th3pl4gu3
  - path: /home/th3pl4gu3/.pgpass
    owner: th3pl4gu3:th3pl4gu3
    permissions: "0600"
    content: |
      ${gaia_db_server}:5432:*:th3pl4gu3:${postgres_user_password}

runcmd:
  # Disable the firewalld
  - systemctl stop firewalld
  - systemctl disable firewalld

  # Automatic growth of volume
  - /usr/libexec/oci-growfs -y

  # Install Docker
  - dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
  - dnf install -y docker-ce
  - systemctl start docker
  - systemctl enable docker

  # Add opc and th3pl4gu3 user to required groups (if not already done)
  - usermod -aG docker opc
  - usermod -aG docker th3pl4gu3
  - usermod -aG nginx opc
  - usermod -aG nginx th3pl4gu3

  # Set folder owners
  - chown -R th3pl4gu3:th3pl4gu3 /home/th3pl4gu3
  # - chown -R th3pl4gu3:th3pl4gu3 /home/th3pl4gu3/cloudflare

  # Create required nginx directories
  - mkdir -p /etc/nginx/sites-enabled

  # Set permissions for nginx directories
  - chmod 755 /etc/nginx/sites-enabled

  # Backup original nginx.conf and replace with custom one
  - mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.back || true
  - cp /tmp/nginx.conf.custom /etc/nginx/nginx.conf
  - chown root:root /etc/nginx/nginx.conf
  - chmod 644 /etc/nginx/nginx.conf

  # Configure SELinux for nginx reverse proxy functionality
  - setsebool -P httpd_can_network_connect 1

  # Fix SELinux context for nginx.conf
  - restorecon -v /etc/nginx/nginx.conf

  # Enable and restart nginx
  - systemctl enable nginx
  - systemctl restart nginx
